{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\sim\\\\Desktop\\\\All projects\\\\Test SQL\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\sim\\\\Desktop\\\\All projects\\\\Test SQL\",\"filename\":\"C:\\\\Users\\\\sim\\\\Desktop\\\\All projects\\\\Test SQL\\\\server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\sim\\\\Desktop\\\\All projects\\\\Test SQL\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.7:development":{"value":{"code":"const express = require('express');\nconst http = require('http');\nconst socketIo = require('socket.io');\nconst path = require('path');\nconst pool = require('./database.js');\nconst app = express();\nconst server = http.createServer(app);\nconst io = socketIo(server, {\n  maxHttpBufferSize: 1e7 // Set max HTTP buffer size to 1MB\n});\napp.use(express.static(path.join(__dirname, 'public')));\napp.use(express.json());\napp.get('/', (req, res) => {\n  res.sendFile(path.join(__dirname, 'index.html'));\n});\napp.post('/register', (req, res) => {\n  const {\n    username,\n    password,\n    email\n  } = req.body;\n  pool.query('INSERT INTO users (username, password, email) VALUES (?, ?, ?)', [username, password, email]);\n  try {\n    res.status(201).send('User successfully registered');\n  } catch (error) {\n    res.status(500).send('Error registering user');\n  }\n});\n\n//User name registration\nlet regUsers = {};\nlet onlineUsers = {};\nfunction registerOnlineUser(username, socket) {\n  socket.username = username;\n  socket.emit('username accepted', username);\n  socket.emit('user connected', {\n    username: socket.username,\n    isSelf: true\n  });\n  onlineUsers[username] = {\n    socketId: socket.id,\n    username: username\n  };\n}\nio.on('connection', socket => {\n  console.log('A new user has connected');\n  // ------------------------------------------------------------\n  // Register username for new connections\n\n  socket.on('register username', regData => {\n    const {\n      username,\n      password,\n      email\n    } = regData;\n    if (regUsers.hasOwnProperty(username)) {\n      socket.emit('username rejected', 'Username is already taken, please try another one.');\n      return;\n    }\n    //save the username and password\n    regUsers[username] = {\n      password: password,\n      email: email\n    };\n    registerOnlineUser(username, socket);\n    socket.broadcast.emit('user connected', {\n      username: socket.username,\n      isSelf: false\n    });\n    console.log(onlineUsers);\n    //  console.log(`Username registered and set: ${socket.username}`);\n    //  console.log(regUsers);\n    updateUserCount();\n  });\n  socket.on('login', loginData => {\n    const {\n      username,\n      password\n    } = loginData;\n    if (regUsers.hasOwnProperty(username) && regUsers[username].password === password) {\n      registerOnlineUser(username, socket);\n      console.log(onlineUsers);\n      updateUserCount();\n    } else {\n      socket.emit('username rejected', 'Invalid username or password');\n    }\n  });\n\n  // -------------------------------------------------------------\n  //send message functions\n  socket.on('chat message', msg => {\n    console.log('Accessing username:', socket.username);\n    console.log(regUsers.hasOwnProperty(socket.username));\n    if (socket.username && regUsers.hasOwnProperty(socket.username)) {\n      const messageData = {\n        username: socket.username,\n        message: msg\n      };\n      socket.emit('chat message', {\n        ...messageData,\n        isSelf: true\n      });\n      socket.broadcast.emit('chat message', {\n        ...messageData,\n        isSelf: false\n      });\n    } else {\n      socket.emit('message reject', 'You are not logged in, please log in first.');\n    }\n  });\n\n  // -------------------------------------------------------------\n  //handle disconnection event\n  socket.on('disconnect', () => {\n    console.log('A user has disconnected');\n    socket.broadcast.emit('user disconnected', {\n      username: socket.username\n    });\n    delete onlineUsers[socket.username];\n    console.log(onlineUsers);\n    updateUserCount();\n  });\n\n  // --------------------------------------------------------------\n  //login function\n\n  // -------------------------------------------------------------\n  //Typing function\n  socket.on('userTyping', data => {\n    io.emit('typing', data);\n  });\n\n  // -------------------------------------------------------------\n  //send photo function\n  socket.on('send image', function (data) {\n    // Broadcast the image data to all connected clients\n    io.emit('receive image', data.image, socket.username);\n  });\n});\n\n// -------------------------------------------------------------\n// user count\nfunction updateUserCount() {\n  io.emit('user count', Object.keys(onlineUsers).length);\n  console.log(Object.keys(onlineUsers).length);\n}\n;\n\n// -------------------------------------------------------------\n//start server\nconst PORT = process.env.PORT || 3000;\nserver.listen(PORT, () => {\n  console.log(`Server is running on http://localhost:${PORT}`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","http","socketIo","path","pool","app","server","createServer","io","maxHttpBufferSize","use","static","join","__dirname","json","get","req","res","sendFile","post","username","password","email","body","query","status","send","error","regUsers","onlineUsers","registerOnlineUser","socket","emit","isSelf","socketId","id","on","console","log","regData","hasOwnProperty","broadcast","updateUserCount","loginData","msg","messageData","message","data","image","Object","keys","length","PORT","process","env","listen"],"sourceRoot":"C:\\Users\\sim\\Desktop\\All projects\\Test SQL\\","sources":["server.js"],"sourcesContent":["const express = require('express');\r\nconst http = require('http');\r\nconst socketIo = require('socket.io');\r\nconst path = require('path');\r\nconst pool = require('./database.js');\r\n\r\n\r\nconst app = express();\r\nconst server = http.createServer(app);\r\nconst io = socketIo(server, {\r\n    maxHttpBufferSize: 1e7 // Set max HTTP buffer size to 1MB\r\n});\r\n\r\napp.use(express.static(path.join(__dirname, 'public')));\r\napp.use(express.json());\r\napp.get('/', (req, res) => {\r\n    res.sendFile(path.join(__dirname, 'index.html'));\r\n});\r\n\r\napp.post('/register', (req, res) => {\r\n    const { username, password, email } = req.body;\r\n    pool.query('INSERT INTO users (username, password, email) VALUES (?, ?, ?)', [username, password, email])\r\n    try {\r\n        res.status(201).send('User successfully registered');\r\n    } catch (error) {\r\n        res.status(500).send('Error registering user');\r\n    }\r\n});\r\n\r\n//User name registration\r\nlet regUsers = {};\r\nlet onlineUsers = {};\r\n\r\nfunction registerOnlineUser(username, socket) {\r\n    socket.username = username;\r\n    socket.emit('username accepted', username);\r\n    socket.emit('user connected', { username: socket.username, isSelf: true });\r\n\r\n    onlineUsers[username] = {\r\n        socketId: socket.id,\r\n        username: username\r\n    }\r\n}\r\n\r\nio.on('connection', (socket) => {\r\n    console.log('A new user has connected');\r\n    // ------------------------------------------------------------\r\n    // Register username for new connections\r\n\r\n    socket.on('register username', (regData) => {\r\n        const { username, password, email } = regData;\r\n        if (regUsers.hasOwnProperty(username)) {\r\n            socket.emit('username rejected', 'Username is already taken, please try another one.');\r\n            return;\r\n        }\r\n        //save the username and password\r\n        regUsers[username] = {\r\n            password: password,\r\n            email: email,\r\n        };\r\n\r\n        registerOnlineUser(username, socket);\r\n    \r\n        socket.broadcast.emit('user connected', { username: socket.username, isSelf: false });\r\n\r\n        console.log(onlineUsers);\r\n        //  console.log(`Username registered and set: ${socket.username}`);\r\n        //  console.log(regUsers);\r\n        updateUserCount();\r\n    });\r\n\r\n    socket.on('login', (loginData) => {\r\n        const { username, password } = loginData;\r\n        if (regUsers.hasOwnProperty(username) && regUsers[username].password === password) {\r\n            registerOnlineUser(username, socket);\r\n            console.log(onlineUsers);\r\n            updateUserCount();\r\n        }\r\n        else {\r\n            socket.emit('username rejected', 'Invalid username or password');\r\n        }\r\n    });\r\n\r\n    // -------------------------------------------------------------\r\n    //send message functions\r\n    socket.on('chat message', (msg) => {\r\n        console.log('Accessing username:', socket.username);\r\n        console.log(regUsers.hasOwnProperty(socket.username));\r\n        if (socket.username && regUsers.hasOwnProperty(socket.username)) {\r\n            const messageData = {\r\n                username: socket.username,\r\n                message: msg\r\n            };\r\n            socket.emit('chat message', { ...messageData, isSelf: true });\r\n            socket.broadcast.emit('chat message', { ...messageData, isSelf: false });\r\n        } else {\r\n            socket.emit('message reject', 'You are not logged in, please log in first.');\r\n        }\r\n    });\r\n\r\n    // -------------------------------------------------------------\r\n    //handle disconnection event\r\n    socket.on('disconnect', () => {\r\n        console.log('A user has disconnected');\r\n        socket.broadcast.emit('user disconnected', { username: socket.username });\r\n        delete onlineUsers[socket.username];\r\n        console.log(onlineUsers);\r\n        updateUserCount()\r\n    })\r\n\r\n    // --------------------------------------------------------------\r\n    //login function\r\n\r\n\r\n    // -------------------------------------------------------------\r\n    //Typing function\r\n    socket.on('userTyping', (data) => {\r\n        io.emit('typing', data);\r\n    });\r\n\r\n    // -------------------------------------------------------------\r\n    //send photo function\r\n    socket.on('send image', function (data) {\r\n        // Broadcast the image data to all connected clients\r\n        io.emit('receive image', data.image, socket.username);\r\n    });\r\n\r\n})\r\n\r\n// -------------------------------------------------------------\r\n// user count\r\nfunction updateUserCount() {\r\n    io.emit('user count', Object.keys(onlineUsers).length);\r\n    console.log(Object.keys(onlineUsers).length);\r\n};\r\n\r\n// -------------------------------------------------------------\r\n//start server\r\nconst PORT = process.env.PORT || 3000;\r\nserver.listen(PORT, () => {\r\n    console.log(`Server is running on http://localhost:${PORT}`);\r\n})\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1720200326103},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\sim\\\\Desktop\\\\All projects\\\\Test SQL\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\sim\\\\Desktop\\\\All projects\\\\Test SQL\",\"filename\":\"C:\\\\Users\\\\sim\\\\Desktop\\\\All projects\\\\Test SQL\\\\database.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\sim\\\\Desktop\\\\All projects\\\\Test SQL\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.7:development":{"value":{"code":"const mysql2 = require('mysql2');\nconst pool = mysql2.createPool({\n  host: 'localhost',\n  user: 'root',\n  password: '137958426',\n  database: 'Chat'\n});\nmodule.exports = pool.promise();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJteXNxbDIiLCJyZXF1aXJlIiwicG9vbCIsImNyZWF0ZVBvb2wiLCJob3N0IiwidXNlciIsInBhc3N3b3JkIiwiZGF0YWJhc2UiLCJtb2R1bGUiLCJleHBvcnRzIiwicHJvbWlzZSJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxzaW1cXERlc2t0b3BcXEFsbCBwcm9qZWN0c1xcVGVzdCBTUUxcXCIsInNvdXJjZXMiOlsiZGF0YWJhc2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbXlzcWwyID0gcmVxdWlyZSgnbXlzcWwyJylcclxuXHJcbmNvbnN0IHBvb2wgPSBteXNxbDIuY3JlYXRlUG9vbCh7XHJcbiAgICBob3N0Oidsb2NhbGhvc3QnLFxyXG4gICAgdXNlcjoncm9vdCcsXHJcbiAgICBwYXNzd29yZDonMTM3OTU4NDI2JyxcclxuICAgIGRhdGFiYXNlOidDaGF0J1xyXG59KVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBwb29sLnByb21pc2UoKSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsUUFBUSxDQUFDO0FBRWhDLE1BQU1DLElBQUksR0FBR0YsTUFBTSxDQUFDRyxVQUFVLENBQUM7RUFDM0JDLElBQUksRUFBQyxXQUFXO0VBQ2hCQyxJQUFJLEVBQUMsTUFBTTtFQUNYQyxRQUFRLEVBQUMsV0FBVztFQUNwQkMsUUFBUSxFQUFDO0FBQ2IsQ0FBQyxDQUFDO0FBRUZDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHUCxJQUFJLENBQUNRLE9BQU8sQ0FBQyxDQUFDIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["mysql2","require","pool","createPool","host","user","password","database","module","exports","promise"],"sourceRoot":"C:\\Users\\sim\\Desktop\\All projects\\Test SQL\\","sources":["database.js"],"sourcesContent":["const mysql2 = require('mysql2')\r\n\r\nconst pool = mysql2.createPool({\r\n    host:'localhost',\r\n    user:'root',\r\n    password:'137958426',\r\n    database:'Chat'\r\n})\r\n\r\nmodule.exports = pool.promise()"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAEhC,MAAMC,IAAI,GAAGF,MAAM,CAACG,UAAU,CAAC;EAC3BC,IAAI,EAAC,WAAW;EAChBC,IAAI,EAAC,MAAM;EACXC,QAAQ,EAAC,WAAW;EACpBC,QAAQ,EAAC;AACb,CAAC,CAAC;AAEFC,MAAM,CAACC,OAAO,GAAGP,IAAI,CAACQ,OAAO,CAAC,CAAC","ignoreList":[]}},"mtime":1720106720400}}